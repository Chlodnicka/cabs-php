# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    LegacyFighter\Cabs\:
        resource: '../src/'
        exclude:
            - '../src/Entity/'
            - '../src/Kernel.php'

    LegacyFighter\Cabs\Ui\:
        resource: '../src/Ui/'
        tags: ['controller.service_arguments']

    LegacyFighter\Cabs\Crm\Claims\ClaimController:
        tags: ['controller.service_arguments']

    LegacyFighter\Cabs\CarFleet\CarTypeController:
        tags: ['controller.service_arguments']

    LegacyFighter\Cabs\Crm\TransitAnalyzer\TransitAnalyzerController:
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Laudis\Neo4j\Contracts\ClientInterface:
        factory: ['LegacyFighter\Cabs\Config\Neo4jClientFactory', 'create']
        arguments: ['%env(NEO4J_DSN)%']

    LegacyFighter\Cabs\Crm\TransitAnalyzer\GraphTransitAnalyzer:
        tags:
            - { name: kernel.event_listener, event: 'LegacyFighter\Cabs\Entity\Events\TransitCompleted', method: 'handle' }

    LegacyFighter\Cabs\Service\AwardsServiceImpl:
        calls:
            - setClaimService: ['@LegacyFighter\Cabs\Crm\Claims\ClaimService']
